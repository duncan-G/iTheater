// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Models;

namespace server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190302062336_RemoveDefaultImgUrl")]
    partial class RemoveDefaultImgUrl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Server.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("MovieListId");

                    b.Property<int>("MoviesDbId");

                    b.Property<string>("PosterPath");

                    b.Property<int>("Rating");

                    b.Property<string>("ReleaseDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MovieListId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(4548),
                            MovieListId = 1,
                            MoviesDbId = 443055,
                            PosterPath = "/7b19Sh0Aef5vGa0OFtvJxLe2SK9.jpg",
                            Rating = 5,
                            ReleaseDate = "2017-02-17",
                            Title = "Love of My Life"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(5950),
                            MovieListId = 1,
                            MoviesDbId = 454294,
                            PosterPath = "/kBuvLX6zynQP0sjyqbXV4jNaZ4E.jpg",
                            Rating = 3,
                            ReleaseDate = "2019-01-16",
                            Title = "The Kid Who Would Be King"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(5978),
                            MovieListId = 1,
                            MoviesDbId = 33125,
                            PosterPath = "/mmGwawOiUaP4Nkr2b1k0xsVhuY5.jpg",
                            Rating = 2,
                            ReleaseDate = "1997-07-13",
                            Title = "Border"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(5982),
                            MovieListId = 1,
                            MoviesDbId = 424783,
                            PosterPath = "/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg",
                            Rating = 0,
                            ReleaseDate = "2018-12-15",
                            Title = "Bumblebee"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(5986),
                            MovieListId = 1,
                            MoviesDbId = 543103,
                            PosterPath = "/6sOFQDlkY6El1B2P5gklzJfVdsT.jpg",
                            Rating = 0,
                            ReleaseDate = "2018-12-22",
                            Title = "Kamen Rider Heisei Generations FOREVER"
                        });
                });

            modelBuilder.Entity("Server.Models.MovieList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("DefaultImageUrl");

                    b.Property<string>("Name");

                    b.Property<bool>("Privacy");

                    b.Property<string>("Slug");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MovieLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 913, DateTimeKind.Local).AddTicks(9439),
                            Name = "Horror",
                            Privacy = true,
                            Slug = "horror-1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(3620),
                            Name = "Sci Fi",
                            Privacy = false,
                            Slug = "sci-fi-2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(3759),
                            Name = "2018",
                            Privacy = true,
                            Slug = "2018-3",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(3782),
                            Name = "2017",
                            Privacy = false,
                            Slug = "2017-4",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(3810),
                            Name = "Action",
                            Privacy = true,
                            Slug = "action-5",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(3842),
                            Name = "Drama",
                            Privacy = false,
                            Slug = "drama-6",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(3928),
                            Name = "The Best",
                            Privacy = true,
                            Slug = "the-best-7",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(3976),
                            Name = "Movie Ever",
                            Privacy = false,
                            Slug = "movie-ever-8",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(4059),
                            Name = "Comedy",
                            Privacy = true,
                            Slug = "comedy-9",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2019, 3, 1, 22, 23, 35, 917, DateTimeKind.Local).AddTicks(4086),
                            Name = "Romance",
                            Privacy = false,
                            Slug = "romance-10",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("Salt");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "a@gmail.com",
                            PasswordHash = new byte[] { 245, 93, 80, 127, 131, 204, 237, 206, 177, 78, 81, 121, 245, 29, 216, 52, 214, 113, 124, 44, 96, 236, 100, 31, 16, 123, 82, 114, 72, 35, 53, 225, 143, 19, 243, 80, 33, 157, 44, 125, 235, 55, 40, 146, 99, 186, 218, 179, 76, 20, 133, 242, 76, 197, 206, 238, 206, 124, 202, 92, 38, 234, 105, 183 },
                            Salt = new byte[] { 166, 81, 98, 16, 255, 247, 133, 186, 120, 72, 237, 112, 159, 18, 99, 212, 131, 159, 212, 124, 96, 113, 217, 36, 183, 208, 193, 229, 52, 243, 44, 239, 242, 0, 224, 107, 251, 183, 42, 188, 87, 4, 138, 58, 68, 240, 69, 26, 55, 167, 166, 95, 43, 215, 10, 171, 113, 227, 112, 149, 126, 5, 68, 59, 176, 210, 233, 59, 78, 175, 226, 44, 40, 92, 17, 162, 39, 245, 196, 63, 49, 29, 160, 63, 214, 175, 72, 116, 68, 181, 155, 43, 166, 32, 212, 237, 155, 93, 97, 178, 190, 145, 118, 77, 232, 92, 185, 151, 163, 21, 37, 158, 85, 60, 253, 114, 3, 75, 223, 86, 185, 107, 157, 159, 35, 22, 202, 79 }
                        });
                });

            modelBuilder.Entity("Server.Models.Movie", b =>
                {
                    b.HasOne("Server.Models.MovieList", "MovieList")
                        .WithMany("Movies")
                        .HasForeignKey("MovieListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Server.Models.MovieList", b =>
                {
                    b.HasOne("Server.Models.User", "User")
                        .WithMany("MovieLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
