// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Models;

namespace server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190302032450_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Server.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("MovieListId");

                    b.Property<int>("MoviesDbId");

                    b.Property<string>("PosterPath");

                    b.Property<int>("Rating");

                    b.Property<string>("ReleaseDate");

                    b.HasKey("Id");

                    b.HasIndex("MovieListId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4963),
                            MovieListId = 1,
                            MoviesDbId = 443055,
                            PosterPath = "/7b19Sh0Aef5vGa0OFtvJxLe2SK9.jpg",
                            Rating = 5,
                            ReleaseDate = "2017-02-17"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(6246),
                            MovieListId = 1,
                            MoviesDbId = 454294,
                            PosterPath = "/kBuvLX6zynQP0sjyqbXV4jNaZ4E.jpg",
                            Rating = 3,
                            ReleaseDate = "2019-01-16"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(6269),
                            MovieListId = 1,
                            MoviesDbId = 33125,
                            PosterPath = "/mmGwawOiUaP4Nkr2b1k0xsVhuY5.jpg",
                            Rating = 2,
                            ReleaseDate = "1997-07-13"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(6273),
                            MovieListId = 1,
                            MoviesDbId = 424783,
                            PosterPath = "/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg",
                            Rating = 0,
                            ReleaseDate = "2018-12-15"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(6277),
                            MovieListId = 1,
                            MoviesDbId = 543103,
                            PosterPath = "/6sOFQDlkY6El1B2P5gklzJfVdsT.jpg",
                            Rating = 0,
                            ReleaseDate = "2018-12-22"
                        });
                });

            modelBuilder.Entity("Server.Models.MovieList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("DefaultImageUrl");

                    b.Property<string>("Name");

                    b.Property<bool>("Privacy");

                    b.Property<string>("Slug");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MovieLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 920, DateTimeKind.Local).AddTicks(7144),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Horror",
                            Privacy = true,
                            Slug = "horror-1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4146),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Sci Fi",
                            Privacy = false,
                            Slug = "sci-fi-2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4311),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "2018",
                            Privacy = true,
                            Slug = "2018-3",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4339),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "2017",
                            Privacy = false,
                            Slug = "2017-4",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4363),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Action",
                            Privacy = true,
                            Slug = "action-5",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4394),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Drama",
                            Privacy = false,
                            Slug = "drama-6",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4457),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "The Best",
                            Privacy = true,
                            Slug = "the-best-7",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4497),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Movie Ever",
                            Privacy = false,
                            Slug = "movie-ever-8",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4521),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Comedy",
                            Privacy = true,
                            Slug = "comedy-9",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2019, 3, 1, 19, 24, 49, 923, DateTimeKind.Local).AddTicks(4548),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Romance",
                            Privacy = false,
                            Slug = "romance-10",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("Salt");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "a@gmail.com",
                            PasswordHash = new byte[] { 193, 140, 159, 157, 95, 80, 73, 103, 191, 210, 209, 16, 129, 168, 139, 65, 78, 58, 25, 7, 154, 220, 112, 217, 174, 95, 21, 201, 175, 231, 51, 9, 128, 121, 149, 14, 49, 199, 56, 33, 140, 40, 37, 198, 217, 121, 66, 110, 23, 132, 36, 242, 110, 180, 2, 192, 93, 38, 202, 143, 127, 131, 179, 127 },
                            Salt = new byte[] { 134, 145, 64, 164, 179, 224, 158, 219, 198, 2, 90, 61, 192, 208, 222, 53, 44, 100, 133, 147, 70, 11, 60, 72, 17, 252, 89, 174, 145, 125, 73, 82, 163, 163, 168, 79, 105, 26, 111, 65, 222, 62, 162, 255, 127, 132, 118, 10, 172, 145, 55, 169, 1, 98, 95, 210, 205, 201, 70, 219, 252, 150, 147, 245, 60, 149, 57, 100, 154, 140, 164, 188, 3, 235, 113, 43, 18, 187, 72, 192, 67, 146, 22, 254, 26, 124, 228, 63, 189, 49, 180, 190, 214, 193, 232, 255, 167, 28, 247, 162, 91, 144, 211, 193, 229, 62, 236, 223, 240, 192, 94, 193, 28, 227, 64, 17, 200, 146, 49, 23, 213, 80, 179, 240, 46, 125, 34, 197 }
                        });
                });

            modelBuilder.Entity("Server.Models.Movie", b =>
                {
                    b.HasOne("Server.Models.MovieList", "MovieList")
                        .WithMany("Movies")
                        .HasForeignKey("MovieListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Server.Models.MovieList", b =>
                {
                    b.HasOne("Server.Models.User", "User")
                        .WithMany("MovieLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
