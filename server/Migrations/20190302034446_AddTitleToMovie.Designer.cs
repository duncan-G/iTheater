// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Models;

namespace server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190302034446_AddTitleToMovie")]
    partial class AddTitleToMovie
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Server.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("MovieListId");

                    b.Property<int>("MoviesDbId");

                    b.Property<string>("PosterPath");

                    b.Property<int>("Rating");

                    b.Property<string>("ReleaseDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MovieListId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3791),
                            MovieListId = 1,
                            MoviesDbId = 443055,
                            PosterPath = "/7b19Sh0Aef5vGa0OFtvJxLe2SK9.jpg",
                            Rating = 5,
                            ReleaseDate = "2017-02-17",
                            Title = "Love of My Life"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(5061),
                            MovieListId = 1,
                            MoviesDbId = 454294,
                            PosterPath = "/kBuvLX6zynQP0sjyqbXV4jNaZ4E.jpg",
                            Rating = 3,
                            ReleaseDate = "2019-01-16",
                            Title = "The Kid Who Would Be King"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(5089),
                            MovieListId = 1,
                            MoviesDbId = 33125,
                            PosterPath = "/mmGwawOiUaP4Nkr2b1k0xsVhuY5.jpg",
                            Rating = 2,
                            ReleaseDate = "1997-07-13",
                            Title = "Border"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(5093),
                            MovieListId = 1,
                            MoviesDbId = 424783,
                            PosterPath = "/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg",
                            Rating = 0,
                            ReleaseDate = "2018-12-15",
                            Title = "Bumblebee"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(5097),
                            MovieListId = 1,
                            MoviesDbId = 543103,
                            PosterPath = "/6sOFQDlkY6El1B2P5gklzJfVdsT.jpg",
                            Rating = 0,
                            ReleaseDate = "2018-12-22",
                            Title = "Kamen Rider Heisei Generations FOREVER"
                        });
                });

            modelBuilder.Entity("Server.Models.MovieList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("DefaultImageUrl");

                    b.Property<string>("Name");

                    b.Property<bool>("Privacy");

                    b.Property<string>("Slug");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MovieLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 0, DateTimeKind.Local).AddTicks(7014),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Horror",
                            Privacy = true,
                            Slug = "horror-1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3064),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Sci Fi",
                            Privacy = false,
                            Slug = "sci-fi-2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3171),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "2018",
                            Privacy = true,
                            Slug = "2018-3",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3194),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "2017",
                            Privacy = false,
                            Slug = "2017-4",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3222),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Action",
                            Privacy = true,
                            Slug = "action-5",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3297),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Drama",
                            Privacy = false,
                            Slug = "drama-6",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3364),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "The Best",
                            Privacy = true,
                            Slug = "the-best-7",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3408),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Movie Ever",
                            Privacy = false,
                            Slug = "movie-ever-8",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3431),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Comedy",
                            Privacy = true,
                            Slug = "comedy-9",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2019, 3, 1, 19, 44, 46, 3, DateTimeKind.Local).AddTicks(3455),
                            DefaultImageUrl = "/assets/movie-poster-default.png",
                            Name = "Romance",
                            Privacy = false,
                            Slug = "romance-10",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("Salt");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "a@gmail.com",
                            PasswordHash = new byte[] { 63, 111, 216, 25, 109, 75, 115, 126, 244, 217, 48, 110, 2, 25, 102, 19, 143, 10, 142, 198, 138, 141, 189, 84, 189, 159, 186, 9, 132, 185, 122, 150, 182, 251, 48, 220, 141, 253, 203, 44, 83, 153, 8, 245, 184, 125, 248, 237, 2, 156, 130, 1, 120, 15, 161, 43, 181, 185, 4, 25, 108, 9, 137, 4 },
                            Salt = new byte[] { 130, 160, 141, 178, 244, 20, 34, 119, 67, 1, 212, 89, 186, 232, 170, 177, 5, 60, 119, 84, 25, 89, 241, 222, 113, 22, 153, 212, 175, 75, 52, 137, 30, 17, 99, 229, 204, 12, 82, 111, 188, 160, 63, 218, 52, 69, 51, 132, 87, 164, 35, 228, 67, 103, 196, 57, 246, 206, 108, 122, 202, 197, 64, 253, 233, 232, 29, 250, 238, 19, 11, 13, 67, 84, 0, 218, 198, 209, 23, 83, 47, 104, 40, 157, 61, 174, 158, 229, 111, 48, 19, 26, 68, 248, 237, 152, 146, 21, 152, 217, 135, 247, 207, 207, 78, 49, 24, 253, 93, 163, 7, 237, 57, 98, 29, 128, 248, 116, 247, 89, 138, 14, 44, 191, 97, 72, 99, 191 }
                        });
                });

            modelBuilder.Entity("Server.Models.Movie", b =>
                {
                    b.HasOne("Server.Models.MovieList", "MovieList")
                        .WithMany("Movies")
                        .HasForeignKey("MovieListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Server.Models.MovieList", b =>
                {
                    b.HasOne("Server.Models.User", "User")
                        .WithMany("MovieLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
